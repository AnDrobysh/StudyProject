Упражнение 1: Сортировка сотрудников

Создайте класс Employee с полями: имя, возраст, и зарплата. Затем создайте список сотрудников и отсортируйте его:

    По возрасту сотрудников.
    По зарплате сотрудников.
    По имени в алфавитном порядке. Для сортировки используйте интерфейс Comparator и метод Collections.sort().

Упражнение 2: Частота слов в тексте

Напишите программу, которая принимает на вход строку текста, разбивает ее на слова, а затем подсчитывает частоту каждого слова. Используйте Map<String, Integer>, где ключом является слово, а значением — количество его вхождений. Выведите слова и их частоту в порядке уменьшения частоты.
Упражнение 3: Очередь задач

Создайте класс Task, который будет представлять задачу с полями: имя задачи и ее приоритет (целое число). Используйте PriorityQueue для управления задачами так, чтобы задачи с более высоким приоритетом обрабатывались первыми. Напишите программу, которая будет добавлять задачи в очередь и выводить их в порядке выполнения по приоритету.
Упражнение 4: Удаление дубликатов из списка

Напишите программу, которая принимает на вход список целых чисел, удаляет все дубликаты и сохраняет только уникальные значения. После этого отсортируйте оставшиеся элементы по возрастанию. Используйте для решения коллекции List и Set.
Упражнение 5: Слияние Map

У вас есть два Map<String, Integer>, которые содержат информацию о количестве товаров в двух магазинах. Напишите программу, которая объединяет эти два отображения, складывая значения для одинаковых ключей (названий товаров), и выводит итоговое количество товаров для каждого товара. Если в одном из магазинов товара нет, то используйте его количество из второго магазина.