Упражнение 1: Наследование и доступ
Создайте два класса BaseClass и DerivedClass, где DerivedClass наследует BaseClass.
В BaseClass объявите:
private поле и метод.
protected поле и метод.
default (без модификатора) поле и метод.
public поле и метод.
В DerivedClass попытайтесь получить доступ ко всем полям и методам BaseClass.
Определите, к каким полям и методам можно обратиться в наследуемом классе и почему.

Упражнение 2: Наследование final класса
Создайте final класс ImmutableClass с final методом displayMessage(), который выводит сообщение на экран.
Попробуйте создать подкласс MutableClass, который наследует ImmutableClass, и переопределите метод displayMessage().
Объясните, почему возникает ошибка компиляции и как final влияет на классы и методы.

Упражнение 3: static блок и методы
Создайте класс InitializationExample с static блоком, который выводит сообщение на экран при загрузке класса.
Добавьте в класс static метод printMessage(), который также выводит сообщение на экран.
В методе main() вызовите printMessage() и объясните порядок выполнения static блока и метода.

Упражнение 4: Использование абстрактных классов
Создайте абстрактный класс Shape с полем String color и абстрактным методом calculateArea().
Создайте два подкласса Rectangle и Circle, которые наследуют Shape и реализуют метод calculateArea().
В методе main() создайте объекты Rectangle и Circle, задайте их цвет и вызовите метод calculateArea().
Объясните, как абстрактные классы помогают создать общий интерфейс для различных типов объектов.
Эти упражнения помогут вам практиковаться с модификаторами доступа, а также с ключевыми словами final, static и abstract в Java.